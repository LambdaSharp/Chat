# MindTouch Î»#
# Copyright (C) 2018-2019 MindTouch, Inc.
# www.mindtouch.com  oss@mindtouch.com
#
# For community documentation and downloads visit mindtouch.com;
# please review the licensing section.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Module: LambdaSharp.Demo.WebSocketsChat
Items:

  # Connection Table
  - Resource: ConnectionsTable
    Scope: all
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ConnectionId
          AttributeType: S
      KeySchema:
        - AttributeName: ConnectionId
          KeyType: HASH

  - Resource: WebSocketApi
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::StackName} Module WebSocket API"
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action

  - Resource: WebSocketDeployment
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref WebSocketApi
    DependsOn:
      - Connect::Route
      - Action::Route
      - Disconnect::Route

  - Resource: WebSocketStage
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: LATEST
      Description: LATEST Stage
      DeploymentId: !Ref WebSocketDeployment
      ApiId: !Ref WebSocketApi

  # - Resource: WebSocketRole
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: ModuleWebSocketApiPrincipal
  #           Effect: Allow
  #           Principal:
  #             Service: apigateway.amazonaws.com
  #           Action:
  #             - sts:AssumeRole
  #     Policies:
  #       - PolicyName: !Sub "${AWS::StackName}ModuleWebSocketApiPolicy"
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Sid: ModuleWebSocketApiLogging
  #               Effect: Allow
  #               Action:
  #                 - logs:CreateLogGroup
  #                 - logs:CreateLogStream
  #                 - logs:DescribeLogGroups
  #                 - logs:DescribeLogStreams
  #                 - logs:PutLogEvents
  #                 - logs:GetLogEvents
  #                 - logs:FilterLogEvents
  #               Resource: arn:aws:logs:*:*:*

  - Namespace: Connect
    Items:

    - Resource: Route
      Type: AWS::ApiGatewayV2::Route
      Properties:
        ApiId: !Ref WebSocketApi
        RouteKey: $connect
        AuthorizationType: NONE
        OperationName: ConnectRoute
        Target: !Sub "integrations/${Connect::Integration}"

    - Resource: Integration
      Type: AWS::ApiGatewayV2::Integration
      Properties:
        ApiId: !Ref WebSocketApi
        Description: Connect Integration
        IntegrationType: AWS_PROXY
        IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Connect::OnConnectFunction.Arn}/invocations"

    - Function: OnConnectFunction
      Memory: 256
      Timeout: 30

    - Resource: Permission
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: !Ref Connect::OnConnectFunction
        Principal: apigateway.amazonaws.com

  - Namespace: Disconnect
    Items:

    - Resource: Route
      Type: AWS::ApiGatewayV2::Route
      Properties:
        ApiId: !Ref WebSocketApi
        RouteKey: $disconnect
        AuthorizationType: NONE
        OperationName: DisconnectRoute
        Target: !Sub "integrations/${Disconnect::Integration}"

    - Resource: Integration
      Type: AWS::ApiGatewayV2::Integration
      Properties:
        ApiId: !Ref WebSocketApi
        Description: Disconnect Integration
        IntegrationType: AWS_PROXY
        IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Disconnect::OnDisconnectFunction.Arn}/invocations"

    - Function: OnDisconnectFunction
      Memory: 256
      Timeout: 30

    - Resource: Permission
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: !Ref Disconnect::OnDisconnectFunction
        Principal: apigateway.amazonaws.com

  - Namespace: Action
    Items:

    - Resource: Route
      Type: AWS::ApiGatewayV2::Route
      Properties:
        ApiId: !Ref WebSocketApi
        RouteKey: $default
        AuthorizationType: NONE
        OperationName: SendRoute
        Target: !Sub "integrations/${Action::Integration}"

    - Resource: Integration
      Type: AWS::ApiGatewayV2::Integration
      Properties:
        ApiId: !Ref WebSocketApi
        Description: Send Integration
        IntegrationType: AWS_PROXY
        IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Action::OnActionFunction.Arn}/invocations"

    - Resource: ApiGatewayPermissions
      Allow: execute-api:ManageConnections
      Value: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/LATEST/POST/@connections/*

    - Function: OnActionFunction
      Memory: 256
      Timeout: 30

    - Resource: Permission
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: !Ref Action::OnActionFunction
        Principal: apigateway.amazonaws.com
