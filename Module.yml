# LambdaSharp (Î»#)
# Copyright (C) 2018-2019
# lambdasharp.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Module: Demo.WebSocketsChat
Pragmas:
  - Overrides:
      Module::WebSocket.RouteSelectionExpression: $request.body.Action
Using:
  - Module: LambdaSharp.S3.IO@lambdasharp
Items:

  # Connection Table
  - Resource: ConnectionsTable
    Scope: all
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ConnectionId
          AttributeType: S
      KeySchema:
        - AttributeName: ConnectionId
          KeyType: HASH

  # Create function for web-socket requests
  - Function: ChatFunction
    Description: Handle web-socket messages
    Memory: 256
    Timeout: 30
    Sources:
      - WebSocket: $connect
        Invoke: OpenConnection

      - WebSocket: $disconnect
        Invoke: CloseConnection

      - WebSocket: send
        Invoke: SendMessage

      - WebSocket: rename
        Invoke : RenameUser

  # Create function for sending response to web-sockets
  - Function: NotifyFunction
    Description: Notify all web-sockets
    Memory: 256
    Timeout: 30
    Sources:
      - Sqs: NotifyQueue

  - Resource: NotifyQueue
    Scope: all
    Type: AWS::SQS::Queue
    Allow: Send,Receive

  # Write the site configuration settings to a JSON file in the S3 bucket
  - Resource: WebsiteConfigJson
    Type: LambdaSharp::S3::WriteJson
    Properties:
      Bucket: !Ref WebsiteBucket
      Key: config.json
      Contents:
        ServerUri: !Ref WebSocketUrl

  # Create bucket to host website
  - Resource: WebsiteBucket
    Description: S3 bucket for hosting website assets
    Type: AWS::S3::Bucket

  - Resource: WebsiteBucketPolicy
    Description: Public access policy
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: WebsiteBucket
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${WebsiteCloudFrontIdentity}"
            Action: s3:GetObject
            Resource: !Sub "${WebsiteBucket.Arn}/*"
      Bucket: !Ref WebsiteBucket
    DependsOn: DeployWebsiteFiles

  - Package: WebsiteFiles
    Build: dotnet publish -c Release BlazorWebSocket -p:BlazorEnableCompression=false
    Files: BlazorWebSocket/bin/Release/netstandard2.1/publish/wwwroot/

  - Resource: DeployWebsiteFiles
    Type: LambdaSharp::S3::Unzip
    Properties:
      SourceBucket: !Ref DeploymentBucketName
      SourceKey: !Ref WebsiteFiles
      DestinationBucket: !Ref WebsiteBucket
      DestinationKey: ""
      Encoding: BROTLI

  - Resource: WebsiteCloudFront
    Description: CloudFront distribution for https:// web access to the S3 bucket
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CloudFront Distribution pointing to the S3 bucket
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${WebsiteCloudFrontIdentity}"
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 0
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          MinTTL: 0
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
    DependsOn: WebsiteBucketPolicy

  - Resource: WebsiteCloudFrontIdentity
    Description: CloudFront Origin Identity for authenticating distribution with the S3 bucket
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: ""

  # Export website url

  - Variable: WebsiteUrl
    Description: Website URL
    Scope: public
    Value: !Sub "https://${WebsiteCloudFront.DomainName}/"

  - Variable: WebSocketUrl
    Description: WebSocket URL
    Scope: public
    Value: !Ref Module::WebSocket::Url
